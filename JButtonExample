import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;


public class ButtonExample {
	
	// the main method for running the frame
	public static void main(String[] args){
		
		//  the frame that will hold the demo
		JFrame frame = new JFrame("Test");
		
		
		//  a panel that will hold all the components.
		//  build a frame then add a panel to it.  This is so that you can easily modify things
		JPanel panel = new JPanel();
		
		
		// set the layout type for this
		//  BorderLayout will set sections in the top(North), center(Center), bottom(South), left(West), right(East) that you can add components to
		panel.setLayout(new BorderLayout());
		
		//  the button to press
		JButton button = new JButton("Press me");
		
		//  add a label to tell the user what to do
		panel.add(new JLabel("Type stuff in the area below me!"), BorderLayout.CENTER);
		
		//  add in a text area to type in
		JTextField textarea = new JTextField();
		
		//  add it to the frame
		panel.add(textarea, BorderLayout.SOUTH);
		
		//  the method to make the button 'listen' for when the mouse does something
		//  can also be made as a separate method
		button.addMouseListener(new MouseAdapter() {

			//  the method for checking to see if the mouse was clicked
			//  can be made into a separate method
			//  can also be for if mouse enters a certain x and y
			public void mousePressed(MouseEvent e) {
				
				//  what should happen when the mouse is clicked?
				JOptionPane.showMessageDialog(frame, textarea.getText());

			}
		});
		
		//  declare these for your frame so it knows where it will show up on the screen, and how large it will be
		//  all variables are relative to the upper left corner
		frame.setBounds(700, 100, 500, 500);
		
		//  components are stored in an array of components that can be accessed and changed around as necessary
		panel.add(button, BorderLayout.EAST);
		
		// add the panel to the frame once all components have been added to the panel so that nothing is left out
		frame.add(panel);
		
		//  the default is false.  Set to true if you want to see it
		frame.setVisible(true);
		
		
		//  Alternative to defining size.
		//  Will make the frame the EXACT size needed to contain everything neatly with no overlap/overflow
//		frame.pack();
		
		
		//  Make it so that it will close upon clicking the red x of the frame
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
	}

}
